Initial.Values <- as.initial.values(Fit6)
#
Iterations <- 100000
Status <- 200
Thinning <- 10
# ##########################  Adaptive Metropolis  ##########################
#  Fit2 <- LaplacesDemon(Model, Data=MyData, Initial.Values,
#                       Covar=Fit2$Covar,, Iterations=Iterations, Status=Status, Thinning=Thinning,
#                       Algorithm="AMWG", Specs=list(Periodicity=128))
#################  Componentwise Hit-And-Run Metropolis  ##################
Fit6 <- LaplacesDemon(Model, Data=MyData, Initial.Values,
Covar=NULL, Iterations=Iterations, Status=Status, Thinning=Thinning,
Algorithm="CHARM", Specs=NULL)
dput(summary(Fit6),'Fit6')
#dget('Fit6')
Fit6
Consort(Fit6)
caterpillar.plot(Fit, Parms="beta")
plot(Fit, BurnIn, MyData, PDF=FALSE)
plot(Pred, Style="Fitted")
Status <- 200
Thinning <- 10
# ##########################  Adaptive Metropolis  ##########################
#  Fit2 <- LaplacesDemon(Model, Data=MyData, Initial.Values,
#                       Covar=Fit2$Covar,, Iterations=Iterations, Status=Status, Thinning=Thinning,
#                       Algorithm="AMWG", Specs=list(Periodicity=128))
#################  Componentwise Hit-And-Run Metropolis  ##################
Fit6 <- LaplacesDemon(Model, Data=MyData, Initial.Values,
Covar=NULL, Iterations=Iterations, Status=Status, Thinning=Thinning,
Algorithm="CHARM", Specs=NULL)
Initial.Values <- as.initial.values(Fit6)
#
Iterations <- 100000
Status <- 200
Thinning <- 10
# ##########################  Adaptive Metropolis  ##########################
#  Fit2 <- LaplacesDemon(Model, Data=MyData, Initial.Values,
#                       Covar=Fit2$Covar,, Iterations=Iterations, Status=Status, Thinning=Thinning,
#                       Algorithm="AMWG", Specs=list(Periodicity=128))
#################  Componentwise Hit-And-Run Metropolis  ##################
Fit6 <- LaplacesDemon(Model, Data=MyData, Initial.Values,
Covar=NULL, Iterations=Iterations, Status=Status, Thinning=Thinning,
Algorithm="CHARM", Specs=NULL)
dput(summary(Fit6),'Fit6')
#dget('Fit6')
Consort(Fit6)
caterpillar.plot(Fit, Parms="beta")
plot(Fit, BurnIn, MyData, PDF=FALSE)
plot(Pred, Style="Fitted")
plot(Pred, Style="ECDF")
plot(Pred, Style="Jarque-Bera")
plot(Pred, Style="Residual Density")
Levene.Test(Pred)
plot(Pred, Style="Residuals")
plot(Pred, Style="Residuals")
plot(Pred, Style="Covariates", Data=MyData)
plot(Pred, Style="ECDF")
plot(Pred, Style="Fitted")
plot(Pred, Style="Predictive Quantiles")
plot(Pred, Style="Residual Density")
as.initial.values(Fit6)
Fit6
as.initial.values(Fit6)
Iterations <- 200000
Status <- 2000
Thinning <- 10
# ##########################  Adaptive Metropolis  ##########################
#  Fit2 <- LaplacesDemon(Model, Data=MyData, Initial.Values,
#                       Covar=Fit2$Covar,, Iterations=Iterations, Status=Status, Thinning=Thinning,
#                       Algorithm="AMWG", Specs=list(Periodicity=128))
#################  Componentwise Hit-And-Run Metropolis  ##################
Fit6 <- LaplacesDemon(Model, Data=MyData, Initial.Values,
Covar=NULL, Iterations=Iterations, Status=Status, Thinning=Thinning,
Algorithm="CHARM", Specs=NULL)
setwd('F:\\DataW\\sapling-LiDX')
#
dir()
dget('Fit6')
setwd("F:\\DataW\\DeadStandingTrees")
dget('Fit6')
setwd('F:\\DataW\\sapling-LiDX')
#
dir()
#
dat <- read.csv('lgdat2013.csv')
dat0 <- dat[is.na(dat$bra), ]
#
gx0 <- gsub('[N|n|m][G|a|c]([0-9]{2})[0-9]{5}','\\1',dat0$no.)
gy0 <- gsub('[N|n|m][G|a|c][0-9]{2}([0-9]{2})[0-9]{3}','\\1',dat0$no.)
#
gx <- ceiling(as.numeric(gx0)/2)
gx[nchar(gx)==1] <- paste('0', gx[nchar(gx)==1], sep='')
gy <- ceiling(as.numeric(gy0)/2)
gy[nchar(gy)==1] <- paste('0', gy[nchar(gy)==1], sep='')
gxy <- paste(gx,gy,sep='')
#
speAbu <- table(gxy, dat0$sp)
#
xx <- gsub('([0-9]{2})[0-9]{2}', '\\1', rownames(speAbu))
yy <- gsub('[0-9]{2}([0-9]{2})', '\\1', rownames(speAbu))
#
spe20Abu <- cbind(x=as.numeric(xx), y=as.numeric(yy), speAbu)
#
spe20Abu
dir()
env <- read.csv("topograCal-20m.csv")
#
env$cos.asp <- cos(env$aspect*pi/180)
env$sin.asp <- sin(env$aspect*pi/180)
#
head(env); dim(env)
head(spe20Abu); dim(spe20Abu)
##########
require(mvpart)
#
#                sin.asp, env,xv='p')
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev+aspect+slope+ convex+cos.asp+
sin.asp, env,xv="1se")
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
data(spider)
mvpart(data.matrix(spider[,1:12])~herbs+reft+moss+sand+twigs+
water,spider)       # defaults
data(spider)
mvpart(data.matrix(spider[,1:12])~herbs+reft+moss+sand+twigs+
water,spider)       # defaults
mvpart(data.matrix(spider[,1:12])~herbs+reft+moss+sand+twigs+
water,spider,xv="p")  # pick the tree size
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev+aspect+slope+ convex+cos.asp+
sin.asp, env,xv="p")
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="p")
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="min", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="1se", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="1se", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="1se", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="1se", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="1se", which = 8)
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
fit <- mvpart(data.matrix(spe20Abu[,-(1:2)])~meanelev + slope + convex + cos.asp +
sin.asp, env,xv="1se")
str(fit)
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
xy <- expand.grid(x=1:25, y=1:15)
text(xy$x, xy$y, c(t(hab)))
head(env); dim(env)
tab.0 <- rep(NA,length(no.))
tab.0 <- rep(NA,length(X))
attach(env)
tab.0 <- rep(NA,length(X))
logi.1 <- c(meanelev-min(meanelev))<76.3
head(env); dim(env)
Tab.0[logi.1 & logi.2 & logi.3]   <- "A"
Tab.0[logi.1 & logi.2 & !logi.3]  <- "B"
Tab.0[logi.1 & !logi.2 & logi.4]  <- "C"
Tab.0[logi.1 & !logi.2 & !logi.4] <- "D"
Tab.0[!logi.1 & logi.5 & logi.6]  <- "E"
Tab.0[!logi.1 & logi.5 & !logi.6 & logi.7]  <- "F"
Tab.0[!logi.1 & logi.5 & !logi.6 & !logi.7] <- "G"
Tab.0[!logi.1 & !logi.5 ]  <- "H"
Tab.0 <- rep(NA,length(X))
elev0 <- c(meanelev-min(meanelev))
logi.1 <- elev0<76.3
logi.2 <- slope<31.52 & elev0<44.6
logi.3 <- elev0>=12.85
logi.4 <- cos.asp>0.008238
logi.5 <- elev0<135.3
logi.6 <- cos.asp>0.356
logi.7 <- slope<41.17
Tab.0[logi.1 & logi.2 & logi.3]   <- "A"
Tab.0[logi.1 & logi.2 & !logi.3]  <- "B"
Tab.0[logi.1 & !logi.2 & logi.4]  <- "C"
Tab.0[logi.1 & !logi.2 & !logi.4] <- "D"
Tab.0[!logi.1 & logi.5 & logi.6]  <- "E"
Tab.0[!logi.1 & logi.5 & !logi.6 & logi.7]  <- "F"
Tab.0[!logi.1 & logi.5 & !logi.6 & !logi.7] <- "G"
Tab.0[!logi.1 & !logi.5 ]  <- "H"
Tab.0
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
xy <- expand.grid(x=1:25, y=1:15)
text(xy$x, xy$y, c(t(hab)))
ha0 <- fit$where
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
xy <- expand.grid(x=1:25, y=1:15)
text(xy$x, xy$y, c(t(hab)))
ha0
ha1
hab
n.ha
ha0 <- Tab.0
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
xy <- expand.grid(x=1:25, y=1:15)
text(xy$x, xy$y, c(t(hab)))
hab
ha0 <- Tab.0
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
hab
hab <- Tab.0
n.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
hab
hab <- Tab.0
rn.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15, t(hab), col=n.ha+1)
image(1:25, 1:15,  (hab), col=n.ha+1)
hab <- Tab.0
rn.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
hab
image(1:25, 1:15,  t(hab), col=n.ha+1)
n.ha+1
image(1:25, 1:15,  t(hab), col=n.ha+1)
ha0 <- Tab.0
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
rn.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15,  t(hab), col=n.ha+1)
text(xy$x, xy$y, c(t(ha0)))
text(xy$x, xy$y, c(ha0)))
xy <- expand.grid(x=1:25, y=1:15)
text(xy$x, xy$y, c(ha0))
image(1:25, 1:15,  t(hab), col=n.ha+1)
xy <- expand.grid(x=1:25, y=1:15)
text(xy$x, xy$y, c(ha0))
text(xy$x, xy$y, t(ha0))
image(1:25, 1:15,  t(hab), col=n.ha+1)
xy <- expand.grid(x=1:25, y=1:15)
text(xy$x, xy$y, t(ha0))
text(xy$x, xy$y, c(t(ha0)))
xy <- expand.grid(x=1:25, y=1:15)
text(xy$x, xy$y, c(t(ha0)))
image(1:25, 1:15,  t(hab), col=n.ha+1)
xy <- expand.grid(x=1:25, y=1:15)
text(xy$x, xy$y, c(t(ha0)))
xy <- expand.grid(x=1:25, y=1:15)
text(xy$x, xy$y, c(ha0))
text(xy$x, xy$y, ha0)
image(1:25, 1:15,  t(hab), col=n.ha+1)
xy <- expand.grid(x=1:25, y=1:15)
text(xy$x, xy$y, ha0)
xy <- expand.grid(x=1:15, y=1:25)
text(xy$x, xy$y, ha0)
image(1:25, 1:15,  t(hab), col=n.ha+1)
xy <- expand.grid(x=1:15, y=1:25)
text(xy$x, xy$y, ha0)
text(xy$y, xy$x, ha0)
xy <- expand.grid(x=1:15, y=1:25)
text(xy$y, xy$x, ha0)
image(1:25, 1:15,  t(hab), col=n.ha+1)
xy <- expand.grid(x=1:15, y=1:25)
text(xy$y, xy$x, ha0)
text(xy$x, xy$y, ha0)
image(1:25, 1:15,  t(hab), col=n.ha+1)
xy <- expand.grid(y=1:15, x=1:25)
text(xy$x, xy$y, ha0)
Tab.0[logi.1 & logi.2 & logi.3]   <- "A"
Tab.0[logi.1 & logi.2 & !logi.3]  <- "B"
Tab.0[logi.1 & !logi.2 & logi.4]  <- "D"
Tab.0[logi.1 & !logi.2 & !logi.4] <- "C"
Tab.0[!logi.1 & logi.5 & logi.6]  <- "F"
Tab.0[!logi.1 & logi.5 & !logi.6 & logi.7]  <- "G"
Tab.0[!logi.1 & logi.5 & !logi.6 & !logi.7] <- "E"
Tab.0[!logi.1 & !logi.5 ]  <- "H"
ha0 <- Tab.0
ha1 <- paste('a',c(ha0))
hab <- match(ha1, unique(ha1))
rn.ha <- 1:length(unique(c(hab)))
dim(hab) <- c(15, 25)
image(1:25, 1:15,  t(hab), col=n.ha+1)
xy <- expand.grid(y=1:15, x=1:25)
text(xy$x, xy$y, ha0)
